<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Right Brain]]></title>
  <link href="http://songyingxinok.github.io/atom.xml" rel="self"/>
  <link href="http://songyingxinok.github.io/"/>
  <updated>2013-12-10T08:25:06+08:00</updated>
  <id>http://songyingxinok.github.io/</id>
  <author>
    <name><![CDATA[John]]></name>
    <email><![CDATA[songyingxinok@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[起源]]></title>
    <link href="http://songyingxinok.github.io/blog/2013/12/07/%E5%8A%9B%E9%87%8F%E7%9A%84%E8%B5%B7%E6%BA%90/"/>
    <updated>2013-12-07T14:41:40+08:00</updated>
    <id>http://songyingxinok.github.io/blog/2013/12/07/力量的起源</id>
    <content type="html"><![CDATA[<p>我喜欢游戏，喜欢8-bit，喜欢吉他，喜欢好的设计，希望这里将是我分享的一个好的起点。<br />
Octopress + Github Pages 是一个搭建私人博客的比较hack的方式，就像Octopress介绍自己说的：<code>A blogging framework for hackers</code>!</p>

<h2 id="ruby">搭建Ruby环境</h2>
<p>使用RVM（Ruby Version Manager）来负责安装与管理Ruby的环境。在做这一切之前，先安装好Homebrew能解决很多<code>command not found</code>的问题</p>

<ul lang="shell">
  <li>
    <h4 id="homebrew">安装Homebrew</h4>
    <pre><code>ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go/install)"
</code></pre>
  </li>
</ul>

<ul>
  <li>
    <h4 id="rvm">安装RVM</h4>

    <pre><code>  curl -L https://get.rvm.io | bash -s stable --ruby
</code></pre>

    <p>这里获取的是最新的ruby版本，目前我取下来的版本是2.0.0。如果需要使用1.9.3环境</p>

    <pre><code>  rvm install 1.9.3
  rvm use 1.9.3
  rvm rubygems latest
</code></pre>

    <p>搭建好RVM之后就可以正式开始搭建Octopress了。cd 到你想要保存octopress的目录下，然后在终	端输入：</p>

    <pre><code>  git clone git://github.com/imathis/octopress.git octopress
</code></pre>

    <p>下一步是安装相关的依赖：</p>

    <pre><code>  gem install bundler
  bundle install
</code></pre>

    <p>最后安装默认主题：</p>

    <pre><code>  rake install
</code></pre>

    <p>这样子octopress就算基本搭建好了，下面的步骤就是怎么上传到github上了。</p>
  </li>
</ul>

<p>小结: 在搭建环境的时候，发生了非常多的command not found的问题，直到我安装了homebrew + google所遇到的问题之后，一切迎刃而解了。</p>

<h2 id="octopress">配置Octopress</h2>
<p>首先在 Github 上创建一个由你自己的用户名组成的repo，如<code>yourusername.github.com</code>，注意这里必须是由你自己的user name 组成。然后第一次提	交会有两个分支，一个是<code>source</code>分支，一个是<code>master</code>分支。<code>source</code>管理博	客的源码，<code>master</code>分支用于管理生成的内容。Octopress的做法似乎是把<code>master</code>分	支对<code>source</code>下的<strong><em>source</em></strong>文件夹做了映射，然后每次都会deploy的时候都会把这个文	件夹提交到<code>master</code>。</p>

<p>创建好了repo之后就可以自动生成github的页面，输入：</p>

<pre><code>rake setup_github_pages
</code></pre>

<p>然后终端会让你输入你Github上的repo地址，这里注意不要根据它给的样式输入，找到自己的仓库地址，格式是：<code>git@github.com:yourusername/yourusername.github.com.git</code>，这里如果输入错误，之后就提交不到仓库了，我在这里遇到了这个问题导致后面一直提交不上去，浪费了时间。</p>

<p>然后输入</p>

<pre><code>rake generate
rake deploy
</code></pre>

<p>最后把代码提交到仓库了</p>

<pre><code>git add .
git commit -m 'Initial octopress'
git push origin source
</code></pre>

<p>到了这一步，就可以在浏览器输入<code>yourusername.github.com</code>访问你的Github Pages了。</p>

<h2 id="section">发布文章</h2>
<p>输入</p>

<pre><code>rake new_post["title"]
</code></pre>

<p>就会在source/_post 文件夹生成一份年月日生成的markdown文件，我们就是通过这个来写文章的。写好文章之后，一般的步骤是</p>

<pre><code>rake generate
git add . 
git commit -i 'change log'	
git push origin source
rake deploy 这样就把文章发布到你的私人博客上了，easy!
</code></pre>

<h2 id="section-1">那些烦人的404</h2>
<p>提交代码到Github之后，但是仍不能访问页面，这里以我遇到的问题为例：</p>

<ul>
  <li>
    <h4 id="recognized-liquid-tag">recognized Liquid tag</h4>

    <blockquote>
      <p>The page build failed with the following error:
  The tag <code>include_array</code> in <code>source/index.html</code> is not a recognized Liquid 	tag.”
  and i just simply delete the code below and everything works fine in local 	preview.</p>
    </blockquote>

    <p>如果Github给你发邮件报这个问题，那很有可能你把整个source分支都提交到了master引起的错误。</p>
  </li>
  <li>
    <h4 id="submodule">submodule</h4>
    <p>如果你遇到了关于submodule的错误，比如在安装greyshade主题的时候。那么只要删除这个文件夹就好了</p>

    <pre><code>  git rm --cached .theme/greyshade
</code></pre>
  </li>
  <li>
    <h4 id="rejected-master---master-non-fast-forward">[rejected] master -&gt; master (non-fast-forward)</h4>
    <p>当提交到master的时候遇到这个问题，可以查看<a href="http://	stackoverflow.com/questions/17609453/rake-gen-deploy-rejected-in-octopress" title="Title">stackoverflow上的解决方案</a></p>
  </li>
</ul>

<h2 id="section-2">小结</h2>
<p>花了两天的时间，才把 Github Pages 搭建好了，有意思的是，原来对Ruby跟Git的完全不了解通过这两天的学习，也渐渐有点起色了。特别是对于Git的命令方面掌握了很多。感谢网上很多的Octopress教程，也是他们让我也想把自己搭建的过程分享出来，希望能节省一些人的时间。</p>
]]></content>
  </entry>
  
</feed>
